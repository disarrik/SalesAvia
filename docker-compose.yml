version: "3.9"
services:

  neo4j:
    build:
      context: ./router-service/data
      dockerfile: Dockerfile
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./router-service/data/volumes/import:/var/lib/neo4j/import
      - ./router-service/data/volumes/logs:/logs
      - ./router-service/data/volumes/plugins:/plugins
      - ./router-service/data/volumes/data:/data
    environment:
      NEO4J_AUTH: none
      NEO4JLABS_PLUGINS: '["apoc"]'
    healthcheck:
      test: [ "CMD", "/var/lib/neo4j/bin/neo4j", "status" ]
      interval: 40s
      timeout: 10s
      retries: 5
      start_period: 50s

  router-service:
    build:
      context: ./router-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      NEO4J_HOST: db
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: neo4j
      EUREKA_HOST: eureka-server
    links:
      - neo4j:db
    depends_on:
      neo4j:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s

  client-service:
    build:
      context: ./client-service
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      EUREKA_HOST: eureka-server
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres
    depends_on:
      eureka-server:
        condition: service_healthy
      router-service:
        condition: service_healthy
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGUSER: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5